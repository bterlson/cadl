// <auto-generated/>

#nullable disable

using System.ClientModel;
using System.IO;
using System.Text.Json;
using System.Threading;
using System.Threading.Tasks;

namespace UnbrandedTypeSpec
{
    internal partial class Utf8JsonBinaryContent : global::System.ClientModel.BinaryContent
    {
        private readonly global::System.IO.MemoryStream _stream;
        private readonly global::System.ClientModel.BinaryContent _content;

        public Utf8JsonBinaryContent()
        {
            _stream = new global::System.IO.MemoryStream();
            _content = global::System.ClientModel.BinaryContent.Create(_stream);
            JsonWriter = new global::System.Text.Json.Utf8JsonWriter(_stream);
        }

        public global::System.Text.Json.Utf8JsonWriter JsonWriter { get; }

        public override async global::System.Threading.Tasks.Task WriteToAsync(global::System.IO.Stream stream, global::System.Threading.CancellationToken cancellationToken = default)
        {
            await JsonWriter.FlushAsync().ConfigureAwait(false);
            await _content.WriteToAsync(stream, cancellationToken).ConfigureAwait(false);
        }

        public override void WriteTo(global::System.IO.Stream stream, global::System.Threading.CancellationToken cancellationToken = default)
        {
            JsonWriter.Flush();
            _content.WriteTo(stream, cancellationToken);
        }

        public override bool TryComputeLength(out long length)
        {
            length = (JsonWriter.BytesCommitted + JsonWriter.BytesPending);
            return true;
        }

        public override void Dispose()
        {
            JsonWriter.Dispose();
            _content.Dispose();
            _stream.Dispose();
        }
    }
}
