// <auto-generated/>

#nullable disable

using System;
using System.ClientModel;
using System.ClientModel.Primitives;

namespace UnbrandedTypeSpec
{
    /// <summary></summary>
    public partial class UnbrandedTypeSpecClient
    {
        private static global::System.ClientModel.Primitives.PipelineMessageClassifier _pipelineMessageClassifier200;
        private static global::System.ClientModel.Primitives.PipelineMessageClassifier _pipelineMessageClassifier201;
        private static global::System.ClientModel.Primitives.PipelineMessageClassifier _pipelineMessageClassifier204;
        private static global::UnbrandedTypeSpec.UnbrandedTypeSpecClient.Classifier2xxAnd4xx _pipelineMessageClassifier2xxAnd4xx;

        private static global::System.ClientModel.Primitives.PipelineMessageClassifier PipelineMessageClassifier200 => _pipelineMessageClassifier200 = global::System.ClientModel.Primitives.PipelineMessageClassifier.Create(stackalloc ushort[] { 200 });

        private static global::System.ClientModel.Primitives.PipelineMessageClassifier PipelineMessageClassifier201 => _pipelineMessageClassifier201 = global::System.ClientModel.Primitives.PipelineMessageClassifier.Create(stackalloc ushort[] { 201 });

        private static global::System.ClientModel.Primitives.PipelineMessageClassifier PipelineMessageClassifier204 => _pipelineMessageClassifier204 = global::System.ClientModel.Primitives.PipelineMessageClassifier.Create(stackalloc ushort[] { 204 });

        private static global::UnbrandedTypeSpec.UnbrandedTypeSpecClient.Classifier2xxAnd4xx PipelineMessageClassifier2xxAnd4xx => _pipelineMessageClassifier2xxAnd4xx ??= new global::UnbrandedTypeSpec.UnbrandedTypeSpecClient.Classifier2xxAnd4xx();

        internal global::System.ClientModel.Primitives.PipelineMessage CreateSayHiRequest(string headParameter, string queryParameter, string optionalQuery, global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier200;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "GET";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/hello", false);
            uri.AppendQuery("queryParameter", queryParameter, true);
            if ((optionalQuery != null))
            {
                uri.AppendQuery("optionalQuery", optionalQuery, true);
            }
            request.Uri = uri.ToUri();
            request.Headers.Set("head-parameter", headParameter);
            request.Headers.Set("Accept", "application/json");
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateHelloAgainRequest(string p2, string p1, global::System.ClientModel.BinaryContent content, global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier200;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "GET";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/againHi/", false);
            uri.AppendPath(p2, true);
            request.Uri = uri.ToUri();
            request.Headers.Set("p1", p1);
            request.Headers.Set("Content-Type", "text/plain");
            request.Headers.Set("Accept", "application/json");
            request.Content = content;
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateNoContentTypeRequest(string p2, string p1, global::System.ClientModel.BinaryContent content, global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier200;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "GET";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/noContentType/", false);
            uri.AppendPath(p2, true);
            request.Uri = uri.ToUri();
            request.Headers.Set("p1", p1);
            request.Headers.Set("Content-Type", "application/json");
            request.Headers.Set("Accept", "application/json");
            request.Content = content;
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateHelloDemo2Request(global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier200;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "GET";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/demoHi", false);
            request.Uri = uri.ToUri();
            request.Headers.Set("Accept", "application/json");
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateCreateLiteralRequest(global::System.ClientModel.BinaryContent content, global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier200;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "POST";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/literal", false);
            request.Uri = uri.ToUri();
            request.Headers.Set("Content-Type", "application/json");
            request.Headers.Set("Accept", "application/json");
            request.Content = content;
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateHelloLiteralRequest(global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier200;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "GET";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/helloLiteral/", false);
            uri.AppendPath(123.ToString(), true);
            uri.AppendQuery("p3", global::UnbrandedTypeSpec.TypeFormatters.ConvertToString(true, null), true);
            request.Uri = uri.ToUri();
            request.Headers.Set("p1", "test");
            request.Headers.Set("Accept", "application/json");
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateTopActionRequest(global::System.DateTimeOffset action, global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier200;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "GET";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/top/", false);
            uri.AppendPath(action.ToString("O"), true);
            request.Uri = uri.ToUri();
            request.Headers.Set("Accept", "application/json");
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateTopAction2Request(global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier200;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "GET";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/top2", false);
            request.Uri = uri.ToUri();
            request.Headers.Set("Accept", "application/json");
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreatePatchActionRequest(global::System.ClientModel.BinaryContent content, global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier200;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "PATCH";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/patch", false);
            request.Uri = uri.ToUri();
            request.Headers.Set("Content-Type", "application/json");
            request.Headers.Set("Accept", "application/json");
            request.Content = content;
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateAnonymousBodyRequest(global::System.ClientModel.BinaryContent content, global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier200;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "POST";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/anonymousBody", false);
            request.Uri = uri.ToUri();
            request.Headers.Set("Content-Type", "application/json");
            request.Headers.Set("Accept", "application/json");
            request.Content = content;
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateFriendlyModelRequest(global::System.ClientModel.BinaryContent content, global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier200;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "POST";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/friendlyName", false);
            request.Uri = uri.ToUri();
            request.Headers.Set("Content-Type", "application/json");
            request.Headers.Set("Accept", "application/json");
            request.Content = content;
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateAddTimeHeaderRequest(global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier204;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "GET";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/", false);
            request.Uri = uri.ToUri();
            request.Headers.Set("Repeatability-First-Sent", global::UnbrandedTypeSpec.TypeFormatters.ConvertToString(global::System.DateTimeOffset.Now, "R"));
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateProjectedNameModelRequest(global::System.ClientModel.BinaryContent content, global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier200;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "POST";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/projectedName", false);
            request.Uri = uri.ToUri();
            request.Headers.Set("Content-Type", "application/json");
            request.Headers.Set("Accept", "application/json");
            request.Content = content;
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateReturnsAnonymousModelRequest(global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier200;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "POST";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/returnsAnonymousModel", false);
            request.Uri = uri.ToUri();
            request.Headers.Set("Accept", "application/json");
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateGetUnknownValueRequest(string accept, global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier200;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "GET";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/unknown-value", false);
            request.Uri = uri.ToUri();
            request.Headers.Set("Accept", accept);
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateInternalProtocolRequest(global::System.ClientModel.BinaryContent content, global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier200;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "POST";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/internalProtocol", false);
            request.Uri = uri.ToUri();
            request.Headers.Set("Content-Type", "application/json");
            request.Headers.Set("Accept", "application/json");
            request.Content = content;
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateStillConvenientRequest(global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier204;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "GET";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/stillConvenient", false);
            request.Uri = uri.ToUri();
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateHeadAsBooleanRequest(string id, global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier2xxAnd4xx;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "HEAD";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/headAsBoolean/", false);
            uri.AppendPath(id, true);
            request.Uri = uri.ToUri();
            message.Apply(options);
            return message;
        }

        internal global::System.ClientModel.Primitives.PipelineMessage CreateWithApiVersionRequest(string p1, global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier204;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "GET";
            global::UnbrandedTypeSpec.ClientUriBuilder uri = new global::UnbrandedTypeSpec.ClientUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/WithApiVersion", false);
            uri.AppendQuery("apiVersion", _apiVersion, true);
            request.Uri = uri.ToUri();
            request.Headers.Set("p1", p1);
            message.Apply(options);
            return message;
        }

        private class Classifier2xxAnd4xx : global::System.ClientModel.Primitives.PipelineMessageClassifier
        {
            public override bool TryClassify(global::System.ClientModel.Primitives.PipelineMessage message, out bool isError)
            {
                isError = false;
                if ((message.Response == null))
                {
                    return false;
                }
                isError = message.Response.Status switch
                {
                    ((>= 200) and (< 300)) => false,
                    ((>= 400) and (< 500)) => false,
                    _ => true
                };
                return true;
            }

            public override bool TryClassify(global::System.ClientModel.Primitives.PipelineMessage message, global::System.Exception exception, out bool isRetryable)
            {
                isRetryable = false;
                return false;
            }
        }
    }
}
