// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;

namespace UnbrandedTypeSpec
{
    internal static partial class Optional
    {
        public static bool IsCollectionDefined<T>(global::System.Collections.Generic.IEnumerable<T> collection)
        {
            return !((collection is global::UnbrandedTypeSpec.ChangeTrackingList<T> changeTrackingList) && changeTrackingList.IsUndefined);
        }

        public static bool IsCollectionDefined<TKey, TValue>(global::System.Collections.Generic.IDictionary<TKey, TValue> collection)
        {
            return !((collection is global::UnbrandedTypeSpec.ChangeTrackingDictionary<TKey, TValue> changeTrackingDictionary) && changeTrackingDictionary.IsUndefined);
        }

        public static bool IsCollectionDefined<TKey, TValue>(global::System.Collections.Generic.IReadOnlyDictionary<TKey, TValue> collection)
        {
            return !((collection is global::UnbrandedTypeSpec.ChangeTrackingDictionary<TKey, TValue> changeTrackingDictionary) && changeTrackingDictionary.IsUndefined);
        }

        public static bool IsDefined<T>(T? value)
            where T : struct 
        {
            return value.HasValue;
        }

        public static bool IsDefined(object value)
        {
            return (value != null);
        }

        public static bool IsDefined(string value)
        {
            return (value != null);
        }

        public static bool IsDefined(global::System.Text.Json.JsonElement value)
        {
            return (value.ValueKind != global::System.Text.Json.JsonValueKind.Undefined);
        }
    }
}
