// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using System.Globalization;

namespace UnbrandedTypeSpec.Models
{
    /// <summary> The Thing_optionalLiteralInt. </summary>
    public readonly partial struct ThingOptionalLiteralInt : global::System.IEquatable<global::UnbrandedTypeSpec.Models.ThingOptionalLiteralInt>
    {
        private readonly int _value;
        /// <summary> 456. </summary>
        private const int _456Value = 456;

        /// <summary> Initializes a new instance of <see cref="global::UnbrandedTypeSpec.Models.ThingOptionalLiteralInt"/>. </summary>
        /// <param name="value"> The value. </param>
        public ThingOptionalLiteralInt(int value)
        {
            _value = value;
        }

        /// <summary> 456. </summary>
        public static global::UnbrandedTypeSpec.Models.ThingOptionalLiteralInt _456 { get; } = new global::UnbrandedTypeSpec.Models.ThingOptionalLiteralInt(_456Value);

        /// <summary> Determines if two <see cref="global::UnbrandedTypeSpec.Models.ThingOptionalLiteralInt"/> values are the same. </summary>
        /// <param name="left"> The left value to compare. </param>
        /// <param name="right"> The right value to compare. </param>
        public static bool operator ==(global::UnbrandedTypeSpec.Models.ThingOptionalLiteralInt left, global::UnbrandedTypeSpec.Models.ThingOptionalLiteralInt right) => left.Equals(right);

        /// <summary> Determines if two <see cref="global::UnbrandedTypeSpec.Models.ThingOptionalLiteralInt"/> values are not the same. </summary>
        /// <param name="left"> The left value to compare. </param>
        /// <param name="right"> The right value to compare. </param>
        public static bool operator !=(global::UnbrandedTypeSpec.Models.ThingOptionalLiteralInt left, global::UnbrandedTypeSpec.Models.ThingOptionalLiteralInt right) => !left.Equals(right);

        /// <summary> Converts a string to a <see cref="global::UnbrandedTypeSpec.Models.ThingOptionalLiteralInt"/>. </summary>
        /// <param name="value"> The value. </param>
        public static implicit operator global::UnbrandedTypeSpec.Models.ThingOptionalLiteralInt(int value) => new global::UnbrandedTypeSpec.Models.ThingOptionalLiteralInt(value);

        /// <param name="obj"> The object to compare. </param>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) => ((obj is global::UnbrandedTypeSpec.Models.ThingOptionalLiteralInt other) && this.Equals(other));

        /// <param name="other"> The instance to compare. </param>
        public bool Equals(global::UnbrandedTypeSpec.Models.ThingOptionalLiteralInt other) => int.Equals(_value, other._value);

        /// <inheritdoc/>
        public override int GetHashCode() => _value.GetHashCode();

        /// <inheritdoc/>
        public override string ToString() => _value.ToString(global::System.Globalization.CultureInfo.InvariantCulture);
    }
}
