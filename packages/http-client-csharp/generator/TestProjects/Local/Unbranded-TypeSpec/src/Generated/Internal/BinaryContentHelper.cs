// <auto-generated/>

#nullable disable

using System;
using System.ClientModel;
using System.Collections.Generic;
using System.Text.Json;

namespace UnbrandedTypeSpec
{
    internal static partial class BinaryContentHelper
    {
        public static global::System.ClientModel.BinaryContent FromEnumerable<T>(global::System.Collections.Generic.IEnumerable<T> enumerable)
            where T : notnull 
        {
            global::UnbrandedTypeSpec.Utf8JsonBinaryContent content = new global::UnbrandedTypeSpec.Utf8JsonBinaryContent();
            content.JsonWriter.WriteStartArray();
            foreach (var item in enumerable)
            {
                content.JsonWriter.WriteObjectValue<T>(item, global::UnbrandedTypeSpec.ModelSerializationExtensions.WireOptions);
            }
            content.JsonWriter.WriteEndArray();

            return content;
        }

        public static global::System.ClientModel.BinaryContent FromEnumerable(global::System.Collections.Generic.IEnumerable<global::System.BinaryData> enumerable)
        {
            global::UnbrandedTypeSpec.Utf8JsonBinaryContent content = new global::UnbrandedTypeSpec.Utf8JsonBinaryContent();
            content.JsonWriter.WriteStartArray();
            foreach (var item in enumerable)
            {
                if ((item == null))
                {
                    content.JsonWriter.WriteNullValue();
                }
                else
                {
#if NET6_0_OR_GREATER
                    content.JsonWriter.WriteRawValue(item);
#else
                    using (global::System.Text.Json.JsonDocument document = global::System.Text.Json.JsonDocument.Parse(item))
                    {
                        global::System.Text.Json.JsonSerializer.Serialize(content.JsonWriter, document.RootElement);
                    }
#endif
                }
            }
            content.JsonWriter.WriteEndArray();

            return content;
        }

        public static global::System.ClientModel.BinaryContent FromEnumerable<T>(global::System.ReadOnlySpan<T> span)
            where T : notnull 
        {
            global::UnbrandedTypeSpec.Utf8JsonBinaryContent content = new global::UnbrandedTypeSpec.Utf8JsonBinaryContent();
            content.JsonWriter.WriteStartArray();
            int i = 0;
            for (; (i < span.Length); i++)
            {
                content.JsonWriter.WriteObjectValue<T>(span[i], global::UnbrandedTypeSpec.ModelSerializationExtensions.WireOptions);
            }
            content.JsonWriter.WriteEndArray();

            return content;
        }

        public static global::System.ClientModel.BinaryContent FromDictionary<TValue>(global::System.Collections.Generic.IDictionary<string, TValue> dictionary)
            where TValue : notnull 
        {
            global::UnbrandedTypeSpec.Utf8JsonBinaryContent content = new global::UnbrandedTypeSpec.Utf8JsonBinaryContent();
            content.JsonWriter.WriteStartObject();
            foreach (var item in dictionary)
            {
                content.JsonWriter.WritePropertyName(item.Key);
                content.JsonWriter.WriteObjectValue<TValue>(item.Value, global::UnbrandedTypeSpec.ModelSerializationExtensions.WireOptions);
            }
            content.JsonWriter.WriteEndObject();

            return content;
        }

        public static global::System.ClientModel.BinaryContent FromDictionary(global::System.Collections.Generic.IDictionary<string, global::System.BinaryData> dictionary)
        {
            global::UnbrandedTypeSpec.Utf8JsonBinaryContent content = new global::UnbrandedTypeSpec.Utf8JsonBinaryContent();
            content.JsonWriter.WriteStartObject();
            foreach (var item in dictionary)
            {
                content.JsonWriter.WritePropertyName(item.Key);
                if ((item.Value == null))
                {
                    content.JsonWriter.WriteNullValue();
                }
                else
                {
#if NET6_0_OR_GREATER
                    content.JsonWriter.WriteRawValue(item.Value);
#else
                    using (global::System.Text.Json.JsonDocument document = global::System.Text.Json.JsonDocument.Parse(item.Value))
                    {
                        global::System.Text.Json.JsonSerializer.Serialize(content.JsonWriter, document.RootElement);
                    }
#endif
                }
            }
            content.JsonWriter.WriteEndObject();

            return content;
        }

        public static global::System.ClientModel.BinaryContent FromObject(object value)
        {
            global::UnbrandedTypeSpec.Utf8JsonBinaryContent content = new global::UnbrandedTypeSpec.Utf8JsonBinaryContent();
            content.JsonWriter.WriteObjectValue<object>(value, global::UnbrandedTypeSpec.ModelSerializationExtensions.WireOptions);
            return content;
        }

        public static global::System.ClientModel.BinaryContent FromObject(global::System.BinaryData value)
        {
            global::UnbrandedTypeSpec.Utf8JsonBinaryContent content = new global::UnbrandedTypeSpec.Utf8JsonBinaryContent();
#if NET6_0_OR_GREATER
            content.JsonWriter.WriteRawValue(value);
#else
            using (global::System.Text.Json.JsonDocument document = global::System.Text.Json.JsonDocument.Parse(value))
            {
                global::System.Text.Json.JsonSerializer.Serialize(content.JsonWriter, document.RootElement);
            }
#endif
            return content;
        }
    }
}
